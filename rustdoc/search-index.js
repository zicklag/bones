var searchIndex = JSON.parse('{\
"bones":{"doc":"Opinionated game meta-engine built on Bevy.","t":[0,13,13,8,4,13,8,13,13,8,3,0,0,11,11,11,11,11,11,0,12,11,0,0,11,11,11,11,11,11,14,11,11,0,11,10,11,10,11,0,12,11,0,11,11,11,11,11,11,11,11,0,12,12,3,3,3,3,3,3,8,6,10,10,10,10,10,10,10,10,10,11,10,10,10,11,10,10,10,10,10,11,10,10,14,14,5,14,3,3,3,3,3,3,3,3,3,3,3,3,3,12,3,3,3,13,3,3,3,3,3,3,3,3,8,6,3,3,6,6,3,3,3,3,24,24,3,3,13,8,4,3,3,3,8,18,18,18,18,13,16,8,3,3,3,16,3,13,8,6,8,24,13,8,3,8,18,3,3,3,3,3,3,3,6,3,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,11,10,10,10,11,10,10,10,10,10,11,10,10,14,11,11,11,11,11,14,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,10,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,3,3,3,3,3,12,12,12,12,6,6,8,16,3,3,16,3,8,10,10,10,12,12,12,10,8,24,8,18,3,6,10],"n":["ecs","AlreadyBorrowed","DispatcherExecutionFailed","EcsData","EcsError","NotInitialized","RawFns","SystemError","TypeUuidCollision","TypedEcsData","World","atomic","bitset","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","components","components","default","dispatcher","entities","fmt","fmt","from","from","into","into","join","maintain","new","prelude","provide","raw_clone","raw_clone","raw_drop","raw_drop","resources","resources","run_system","system","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","uuid","0","0","AtomicRef","AtomicRefCell","AtomicRefMut","BorrowError","BorrowMutError","BitFmt","BitSet","BitSetVec","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_fmt","bit_init","bit_len","bit_mask","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_test","bit_xor","bitor","bitset","create_bitset","impl_bitset","AtomicComponentStore","AtomicComponentStoreRef","AtomicComponentStoreRefMut","ComponentBitsetIterator","ComponentBitsetIteratorMut","ComponentStore","ComponentStores","TypedComponentOps","UntypedComponentBitsetIterator","UntypedComponentBitsetIteratorMut","UntypedComponentStore","Dispatcher","DispatcherBuilder","systems","Entities","Entity","EntityIterator","AlreadyBorrowed","AtomicComponentStore","AtomicComponentStoreRef","AtomicComponentStoreRefMut","AtomicRef","AtomicRefCell","AtomicRefMut","AtomicResource","BitFmt","BitSet","BitSetVec","BorrowError","BorrowMutError","Comp","CompMut","ComponentBitsetIterator","ComponentBitsetIteratorMut","ComponentStore","ComponentStores","Deref","DerefMut","Dispatcher","DispatcherBuilder","DispatcherExecutionFailed","EcsData","EcsError","Entities","Entity","EntityIterator","IntoSystem","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","NotInitialized","Param","RawFns","Res","ResMut","Resources","State","System","SystemError","SystemParam","SystemResult","TypeUuid","TypeUuid","TypeUuidCollision","TypeUuidExt","TypedComponentOps","TypedEcsData","UUID","UntypedComponentBitsetIterator","UntypedComponentBitsetIteratorMut","UntypedComponentStore","UntypedResource","UntypedResourceInfo","UntypedResources","Uuid","UuidMap","World","add","as_braced","as_bytes","as_fields","as_hyphenated","as_ptr","as_ref","as_simple","as_u128","as_u64_pair","as_urn","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_fmt","bit_init","bit_len","bit_mask","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_test","bit_xor","bitor","bitset","bitset","bitset","bitset","bitset","bitset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","braced","build","builder","cell","clear_killed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_fn","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","components","contains","create","create_bitset","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","drop_fn","encode_buffer","eq","eq","eq","filter_map","filter_map","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_type","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_le","from_bytes_ref","from_components","from_components_unsafe","from_components_unsafe","from_fields","from_fields_le","from_slice","from_slice_le","from_str","from_u128","from_u128_le","from_u64_pair","generation","get","get","get","get","get","get","get","get","get_by_uuid","get_mut","get_mut","get_mut","get_mut","get_mut","get_state","get_state","get_state","get_state","get_state","get_timestamp","get_variant","get_version","get_version_num","hash","hash","hyphenated","impl_bitset","index","init","init","initialize","initialize","initialize","initialize","initialize","initialize","initialize","insert","insert","insert","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_untyped","into_untyped","is_alive","is_nil","iter","iter","iter","iter","iter","iter_mut","iter_mut","iter_mut","iter_mut","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_stages","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","join","kill","killed","layout","layout","map","map","name","name","new","new","new","new","new","new","new","new_raw","new_v4","next","next","next","next","next","nil","parse_str","partial_cmp","partial_cmp","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","remove","remove","remove","remove","remove","resources","run","run","run_seq","serialize","simple","system","system","systems","to_bytes_le","to_fields_le","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_u128_le","try_borrow","try_borrow_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_get","try_get_by_uuid","try_init","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_ascii","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","untyped","untyped_mut","urn","uuid","uuid","uuid","0","0","AtomicResource","Resources","UntypedResource","UntypedResourceInfo","UntypedResources","cell","clone_fn","drop_fn","layout","Comp","CompMut","IntoSystem","Param","Res","ResMut","State","System","SystemParam","borrow","get_state","initialize","initialize","name","run","system","TypeUuid","TypeUuid","TypeUuidExt","UUID","Uuid","UuidMap","uuid"],"q":["bones","bones::ecs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bones::ecs::EcsError","","bones::ecs::atomic","","","","","bones::ecs::bitset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bones::ecs::components","","","","","","","","","","","bones::ecs::dispatcher","","","bones::ecs::entities","","","bones::ecs::preludebones::ecs::prelude::EcsError","","bones::ecs::resources","","","","","","","","","bones::ecs::system","","","","","","","","","","","","","","","","bones::ecs::uuid","","","","","",""],"d":["Entity component system for the bones library.","The requested resource is already borrowed.","The execution of the dispatcher failed and returned one or …","Helper trait that is auto-implemented for anything that …","The types of errors used throughout the ECS.","A resource was not initialized in the <code>World</code> but the <code>System</code> …","Helper trait that is auto-implemented for all <code>Clone</code>-able …","This variant is for user-defined errors.","This happens when two Rust types have the same <code>TypeUuid</code>, …","Helper trait that is auto-implemented for anything that …","The <code>World</code> is simply a collection of <code>Resources</code>, and …","Atomic Refcell implmentation.","Bitset implementation.","","","","","","","ECS component storage.","Stores the world components.","","<code>System</code> executor for <code>World</code>s.","<code>Entity</code> implementation, storage, and interation.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The join macro makes it very easy to iterate over multiple …","Remove the component info for dead entities.","Create a new <code>World</code>.","The prelude.","","Clone the value at <code>src</code>, writing the new value to <code>dst</code>.","","Drop the value at <code>ptr</code>.","","World resource storage.","Stores the world resources.","Run a system once.","Implements the system API for the ECS.","","","","","","","","","UUID-related utilities such as UUID map and type UUIDs.","","","A wrapper type for an immutably borrowed value from an …","A threadsafe analogue to RefCell.","A wrapper type for a mutably borrowed value from an …","An error returned by <code>AtomicRefCell::try_borrow</code>.","An error returned by <code>AtomicRefCell::try_borrow_mut</code>.","BitSet formatter.","The BitSet API.","The type of bitsets used to track entities in component …","Returns if all bits are set.","Bitwise AND.","Bitwise AND after NOT of rhs.","Returns if any bits are set.","Conditionally sets or resets the given bit.","Counts the number of set bits.","Returns if the two bitsets have no bits in common.","Returns if the two bitsets are equal.","Flips the given bit.","Format the bits.","Initializes all bits.","Returns total number of bits.","Bitwise combine with MASK.","Returns if none of the bits are set.","Bitwise NOT.","Bitwise OR.","Resets the given bit.","Sets the given bit.","Returns if self is a subset of rhs.","Returns if self is a superset of rhs.","Returns if the given bit is set.","Bitwise XOR.","Shorthand for combining bitsets with bit_or.","Shorthand for setting bits on the bitset container.","Creates a bitset big enough to contain the index of each …","Implements the <code>BitSet</code> trait members for your type through …","A typed, wrapper handle around <code>UntypedComponentStore</code> that …","A read-only borrow of <code>AtomicComponentStore</code>.","A mutable borrow of <code>AtomicComponentStore</code>.","Read-only iterator over components matching a given bitset","Mutable iterator over components matching a given bitset","A typed wrapper around <code>UntypedComponentStore</code>.","A collection of <code>ComponentStore&lt;T&gt;</code>.","Implements typed operations on top of a …","Iterates over components using a provided bitset. Each …","Iterates over components using a provided bitset. Each …","Holds components of a given type indexed by <code>Entity</code>.","A dispatcher is used to execute a collection of <code>System</code> in …","A builder that accumulates systems to be inserted into a …","The current systems in this builder","Holds a list of alive entities.","An entity index.","Iterator over entities using the provided bitset.","The requested resource is already borrowed.","A typed, wrapper handle around <code>UntypedComponentStore</code> that …","A read-only borrow of <code>AtomicComponentStore</code>.","A mutable borrow of <code>AtomicComponentStore</code>.","A wrapper type for an immutably borrowed value from an …","A threadsafe analogue to RefCell.","A wrapper type for a mutably borrowed value from an …","A handle to a resource from a <code>Resources</code> collection.","BitSet formatter.","The BitSet API.","The type of bitsets used to track entities in component …","An error returned by <code>AtomicRefCell::try_borrow</code>.","An error returned by <code>AtomicRefCell::try_borrow_mut</code>.","<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.","<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.","Read-only iterator over components matching a given bitset","Mutable iterator over components matching a given bitset","A typed wrapper around <code>UntypedComponentStore</code>.","A collection of <code>ComponentStore&lt;T&gt;</code>.","Implements <code>Deref</code> for <em>single-item</em> structs. This is …","Implements <code>DerefMut</code> for <em>single-item</em> structs. This is …","A dispatcher is used to execute a collection of <code>System</code> in …","A builder that accumulates systems to be inserted into a …","The execution of the dispatcher failed and returned one or …","Helper trait that is auto-implemented for anything that …","The types of errors used throughout the ECS.","Holds a list of alive entities.","An entity index.","Iterator over entities using the provided bitset.","Converts a function into a <code>System</code>.","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","A resource was not initialized in the <code>World</code> but the <code>System</code> …","The type of the parameter, ranging over the lifetime of …","Helper trait that is auto-implemented for all <code>Clone</code>-able …","<code>SystemParam</code> for getting read access to a resource.","<code>SystemParam</code> for getting mutable access to a resource.","A collection of resources.","The intermediate state for the parameter, that may be …","Struct used to run a system function using the world.","This variant is for user-defined errors.","Trait used to implement parameters for <code>System</code> functions.","The result of a <code>System</code>’s execution.","Provides a statically defined UUID for a Rust type.","","This happens when two Rust types have the same <code>TypeUuid</code>, …","Extension trait for <code>TypeUuid</code> that adds a method returning …","Implements typed operations on top of a …","Helper trait that is auto-implemented for anything that …","","Iterates over components using a provided bitset. Each …","Iterates over components using a provided bitset. Each …","Holds components of a given type indexed by <code>Entity</code>.","An untyped resource that may be inserted into …","Used to construct an <code>UntypedResource</code>.","Storage for un-typed resources.","A Universally Unique Identifier (UUID).","Faster hash map using <code>FxHashMap</code> and a UUID key.","The <code>World</code> is simply a collection of <code>Resources</code>, and …","Adds a function implementing <code>IntoSystem</code> to the system pool.","Get a borrowed <code>Braced</code> formatter.","Returns a slice of 16 octets containing the value.","Returns the four field values of the UUID.","Get a borrowed <code>Hyphenated</code> formatter.","Returns a raw pointer to the underlying data in this cell.","","Get a borrowed <code>Simple</code> formatter.","Returns a 128bit value containing the value.","Returns two 64bit values containing the value.","Get a borrowed <code>Urn</code> formatter.","Returns if all bits are set.","Bitwise AND.","Bitwise AND after NOT of rhs.","Returns if any bits are set.","Conditionally sets or resets the given bit.","Counts the number of set bits.","Returns if the two bitsets have no bits in common.","Returns if the two bitsets are equal.","Flips the given bit.","Format the bits.","Initializes all bits.","Returns total number of bits.","Bitwise combine with MASK.","Returns if none of the bits are set.","Bitwise NOT.","Bitwise OR.","Resets the given bit.","Sets the given bit.","Returns if self is a subset of rhs.","Returns if self is a superset of rhs.","Returns if the given bit is set.","Bitwise XOR.","Shorthand for combining bitsets with bit_or.","Read the bitset containing the list of entites with this …","Read the bitset containing the list of entites with this …","Get the bitset representing which entities have this …","Returns the bitset indicating which entity indices have a …","Returns a bitset where each index where the bit is set to …","Shorthand for setting bits on the bitset container.","This is used create an instance of the system parame, …","Immutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","Lock the resource for reading.","","","","","","","Borrow the component store.","","","","","","","","","Mutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","Lock the resource for read-writing.","","","","","","Mutably borrow the component store.","","","","","","","","Get a <code>Braced</code> formatter.","Builds a <code>Dispatcher</code> from the accumulated set of <code>System</code>. …","Create a builder for <code>Dispatcher</code>.","Cell containing the raw pointer to the resource’s data","Clears the killed entity list.","","Copies an <code>AtomicRef</code>.","","","","","","","","","","A function that may be called to clone the resource from …","","","","","","","","","","","","","Stores the world components.","Check whether or not a resource is in the store.","Creates a new <code>Entity</code> and returns it.","Creates a bitset big enough to contain the index of each …","","","","","","","","","","","","","","","","","","","An optional function that will be called to drop the …","A buffer that can be used for <code>encode_...</code> calls, that is …","","","","Make a new <code>AtomicRef</code> for an optional component of the …","Make a new <code>AtomicRefMut</code> for an optional component of the …","","","","","","","","","","","","","","","","","Create an <code>UntypedComponentStore</code> that is valid for the …","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","Creates a reference to a UUID from a reference to the …","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Safety","Creates a UUID from four field values.","Creates a UUID from four field values in little-endian …","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","","Creates a UUID from a 128bit value.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID from two 64bit values.","Returns the generation of this <code>Entity</code>.","Borrow a component in the store, if it exists for the …","Gets an immutable reference to the component of <code>Entity</code>.","Gets an immutable reference to the component of <code>Entity</code>.","Gets an immutable reference to the component of <code>Entity</code>.","Get a read-only pointer to the component for the given …","Get the components of a certain type","Get a cell containing the resource data pointer for the …","Get a resource handle from the store.","Get the untyped component storage by the component’s UUID","Returns a mutable reference to the wrapped value.","Mutably borrow a component in the store, if it exists for …","Gets a mutable reference to the component of <code>Entity</code>.","Gets a mutable reference to the component of <code>Entity</code>.","Get a mutable pointer to the component for the given <code>Entity</code>","This is called to produce the intermediate state of the …","","","","","If the UUID is the correct version (v1, v6, or v7) this …","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","","","Get a <code>Hyphenated</code> formatter.","Implements the <code>BitSet</code> trait members for your type through …","Returns the index of this <code>Entity</code>.","Initialize component storage for type <code>T</code>.","Initialize a resource of type <code>T</code> by inserting it’s …","This will be called to give the parameter a chance to …","","","Initializes the resources required to run this system …","","","This will be called once by <code>Dispatcher</code> to initialize the …","Insert a component into the store.","Inserts a component for the given <code>Entity</code> index. Returns …","Inserts a component for the given <code>Entity</code> index.","Returns true if the entity already had a component of this …","Insert a new resource","Insert a resource.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes self and returns the underlying byte value of the …","Consumes the <code>AtomicRefCell</code>, returning the wrapped value.","","","","","","Converts to the internal, untyped <code>ComponentStore</code>.","Consume <code>Resources</code> and extract the underlying …","Checks if the <code>Entity</code> is still alive.","Tests if the UUID is nil (all zeros).","Iterate over all components in the store.","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type.","Iterates immutably over all components of this type.","Mutably iterate over all components in the store.","Iterates mutably over all components of this type. Very …","Iterates mutably over all components of this type.","Iterates mutably over all components of this type.","Mutably iterate over all the components in the store that …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Returns an iterator of all stages.","Iterate over all the components in the store that match …","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","Iterates over entities using the provided bitset.","The join macro makes it very easy to iterate over multiple …","Kill an entity.","Returns entities in the killed list.","Get the layout of the components stored.","The memory layout of the resource","Make a new <code>AtomicRef</code> for a component of the borrowed data.","Make a new <code>AtomicRefMut</code> for a component of the borrowed …","Returns the underlying type name of the system.","A best-effort name for the system, for diagnostic purposes.","Creates a new <code>AtomicRefCell</code> containing <code>value</code>.","Safety","Create a arbitrary <code>UntypedComponentStore</code>.","Creates a new <code>UntypedResource</code> from an instance of a Rust …","Creates a new <code>DispatcherBuilder</code>.","Create an empty <code>UntypedResources</code>.","Create an empty <code>Resources</code>.","Create a new <code>UntypedResource</code> from raw <code>UntypedResourceInfo</code>.","Creates a random UUID.","","","","","","The ‘nil UUID’ (all zeros).","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","Clone the value at <code>src</code>, writing the new value to <code>dst</code>.","","","","","","","","","","","Drop the value at <code>ptr</code>.","","","","","","","","","","","Remove a component from an entity, returning the previous …","Removes the component of <code>Entity</code>. Returns <code>Some(T)</code> if the …","Removes the component of <code>Entity</code>.","If there is a previous value, <code>true</code> will be returned.","Remove a resource","Stores the world resources.","Runs the system’s function using the provided <code>World</code>","This is run every time the system is executed","Runs the systems one after the other, one at a time.","","Get a <code>Simple</code> formatter.","Convert into a <code>System</code>.","","The current systems in this builder","Returns the bytes of the UUID in little-endian order.","Returns the four field values of the UUID in little-endian …","","","","","","","","","","","","","","","Returns a 128bit little-endian value containing the value.","Attempts to immutably borrow the wrapped value, but …","Attempts to mutably borrow the wrapped value, but instead …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the components of a certain type","Gets a resource handle from the store if it exists.","Get the untyped component storage by the component’s UUID","Initialize component storage for type <code>T</code>.","Try to insert a resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Borrow the underlying <code>UntypedResources</code> store.","Mutably borrow the underlying <code>UntypedResources</code> store.","Get a <code>Urn</code> formatter.","Get the <code>Uuid</code> assocated to the type.","","","","","A handle to a resource from a <code>Resources</code> collection.","A collection of resources.","An untyped resource that may be inserted into …","Used to construct an <code>UntypedResource</code>.","Storage for un-typed resources.","Cell containing the raw pointer to the resource’s data","A function that may be called to clone the resource from …","An optional function that will be called to drop the …","The memory layout of the resource","<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.","<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.","Converts a function into a <code>System</code>.","The type of the parameter, ranging over the lifetime of …","<code>SystemParam</code> for getting read access to a resource.","<code>SystemParam</code> for getting mutable access to a resource.","The intermediate state for the parameter, that may be …","Struct used to run a system function using the world.","Trait used to implement parameters for <code>System</code> functions.","This is used create an instance of the system parame, …","This is called to produce the intermediate state of the …","This will be called to give the parameter a chance to …","This will be called once by <code>Dispatcher</code> to initialize the …","A best-effort name for the system, for diagnostic purposes.","This is run every time the system is executed","Convert into a <code>System</code>.","Provides a statically defined UUID for a Rust type.","","Extension trait for <code>TypeUuid</code> that adds a method returning …","","A Universally Unique Identifier (UUID).","Faster hash map using <code>FxHashMap</code> and a UUID key.","Get the <code>Uuid</code> assocated to the type."],"i":[0,2,2,0,0,2,0,2,2,0,0,0,0,2,1,2,1,1,1,0,1,1,0,0,2,2,2,1,2,1,0,1,1,0,2,66,1,66,1,0,1,1,0,1,2,2,1,2,1,2,1,0,67,68,0,0,0,0,0,0,0,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,17,17,17,17,2,70,0,0,0,0,70,0,2,0,0,0,0,2,0,0,0,71,0,0,0,0,0,0,0,0,0,16,17,17,17,17,20,17,17,17,17,17,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,24,25,26,27,28,0,70,20,20,61,43,44,59,13,62,60,29,52,32,24,25,25,26,26,27,33,63,65,34,30,30,56,40,40,41,41,31,31,35,16,36,28,37,38,17,20,20,61,43,44,59,13,62,60,29,52,32,24,25,26,27,33,63,65,34,30,30,56,40,41,31,31,35,16,36,28,37,38,17,17,16,33,65,28,20,29,27,34,31,35,36,28,37,38,17,65,20,27,34,31,35,36,28,37,38,17,20,17,1,38,28,0,20,24,31,35,16,28,37,38,17,29,32,40,41,32,41,17,27,34,65,17,20,36,17,29,32,20,43,43,44,44,13,13,13,13,29,32,36,17,17,17,17,27,20,20,20,61,43,44,59,13,62,60,29,52,32,24,25,26,27,33,63,65,34,30,56,40,41,31,35,16,36,28,37,38,17,17,17,17,17,17,17,17,24,24,31,17,17,17,17,17,17,17,17,36,52,24,25,26,27,35,37,38,35,20,52,24,26,27,70,25,26,40,41,17,17,17,17,36,17,17,0,36,35,38,70,25,26,56,40,41,56,52,24,26,27,37,38,20,61,43,44,59,13,62,60,29,52,32,24,25,26,27,33,63,65,34,30,56,40,41,31,35,16,36,28,37,38,17,17,20,61,59,62,60,63,24,38,28,17,52,24,25,26,27,52,24,26,27,52,24,26,27,33,52,24,25,26,27,28,0,28,28,27,65,29,32,56,56,20,52,27,34,16,37,38,34,17,61,59,62,60,63,17,17,20,17,66,20,27,34,31,35,36,28,37,38,17,66,20,27,34,31,35,36,28,37,38,17,52,24,26,27,37,1,56,56,33,17,17,72,56,16,17,17,20,27,34,31,35,36,28,37,38,17,43,44,13,17,17,20,20,20,61,43,44,59,13,62,60,29,52,32,24,25,26,27,33,63,65,34,30,56,40,41,31,35,16,36,28,37,38,17,17,35,38,35,35,38,20,61,43,44,59,13,62,60,29,52,32,24,25,26,27,33,63,65,34,30,56,40,41,31,35,16,36,28,37,38,17,17,17,20,61,43,44,59,13,62,60,29,52,32,24,25,26,27,33,63,65,34,30,56,40,41,31,35,16,36,28,37,38,17,38,38,17,73,28,28,67,68,0,0,0,0,0,65,65,65,65,0,0,0,70,0,0,70,0,0,70,70,70,56,56,56,72,0,0,0,71,0,0,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],0,0,[[],1],0,0,[[2,3],[[5,[4]]]],[[2,3],[[5,[4]]]],[[]],[[]],[[]],[[]],0,[1],[[],1],0,[6],[[7,7]],[[7,7]],[7],[7],0,0,[1,[[5,[8]]]],0,[[]],[[],9],[[],5],[[],5],[[],5],[[],5],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,[[],11],[[]],[[]],[[],11],[[12,11]],[[],12],[[],11],[[],11],[12],[[],13],[11],[[],12],[[]],[[],11],[[]],[[]],[12],[12],[[],11],[[],11],[12,11],[[]],0,0,[[],[[15,[14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],[17,18],[17],[17],[17,19],[20],[17],[17,21],[17,22],[17],[17,23],[[],11],[[]],[[]],[[],11],[[12,11]],[[],12],[[],11],[[],11],[12],[[],13],[11],[[],12],[[]],[[],11],[[]],[[]],[12],[12],[[],11],[[],11],[12,11],[[]],0,[24,15],[25,15],[26,15],[27,15],[28,15],0,[[]],[20,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,29],[[]],[[]],[[]],[[]],[[]],[[]],[31,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,32],[[]],[[]],[[]],[[]],[[]],[31,26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,18],[[16,1],33],[[],16],0,[28],[20,20],[29,29],[27,27],[34,34],[31,31],[35,35],[36,36],[28,28],[37,37],[38,38],[17,17],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[20,20],39],[[17,17],39],0,[38,11],[28,36],[[],[[15,[14]]]],[[],20],[[],24],[[],31],[[],35],[[],16],[[],28],[[],37],[[],38],[[],17],[29],[32],[40],[41],[32],[41],[[],[[5,[17]]]],[27],[34],0,[[]],[[20,20],11],[[36,36],11],[[17,17],11],[29,[[42,[29]]]],[32,[[42,[32]]]],[[20,3],[[5,[4]]]],[[43,3],[[5,[4]]]],[[43,3],[[5,[4]]]],[[44,3],[[5,[4]]]],[[44,3],[[5,[4]]]],[[13,3],[[5,[4]]]],[[13,3],[[5,[4]]]],[[13,3],[[5,[4]]]],[[13,3],[[5,[4]]]],[[29,3],[[5,[4]]]],[[32,3],[[5,[4]]]],[[36,3],[[5,[4]]]],[[17,3],[[5,[4]]]],[[17,3],[[5,[4]]]],[[17,3],[[5,[4]]]],[[17,3],[[5,[4]]]],[[],27],[[]],[45],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,17],[18,17],[23,17],[21,17],[[],17],[[],17],[[],17],[27,24],[27,24],[[[46,[[20,[27]]]]],31],[[47,48,48],17],[[47,48,48],17],[[],[[5,[17,49]]]],[[],[[5,[17,49]]]],[50,[[5,[17]]]],[22,17],[22,17],[[51,51],17],[36,47],[[52,27,36],42],[[24,36],42],[[25,36],42],[[26,36],42],[[27,36],[[42,[7]]]],[35,31],[[37,17],[[42,[[46,[[20,[7]]]]]]]],[38,30],[[35,17],[[46,[[20,[27]]]]]],[20],[[52,27,36],42],[[24,36],42],[[26,36],42],[[27,36],[[42,[7]]]],[1],[1],[1],[1],[1],[17,[[42,[53]]]],[17,54],[17,[[42,[55]]]],[17,12],[36],[17],[17,19],0,[36,47],[35],[38],[1],[1],[1],[[56,1]],[1],[1],0,[[52,27,36],42],[[24,36],42],[[26,36],42],[[27,36,7],11],[[37,17,34],[[42,[34]]]],[38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17],[20],[[]],[[]],[[]],[[]],[[]],[24,27],[38,37],[[28,36],11],[17,11],[[52,27],57],[24,57],[25,57],[26,57],[27,57],[[52,27],57],[24,57],[26,57],[27,57],[[52,27,[58,[[15,[14]]]]],59],[[24,[58,[[15,[14]]]]],59],[[26,[58,[[15,[14]]]]],59],[[27,[58,[[15,[14]]]]],60],[33,57],[[52,27,[58,[[15,[14]]]]],61],[[24,[58,[[15,[14]]]]],61],[[25,[58,[[15,[14]]]]],61],[[26,[58,[[15,[14]]]]],61],[[27,[58,[[15,[14]]]]],62],[[28,[58,[[15,[14]]]]],63],0,[[28,36]],[28,15],[27,64],0,[29,29],[32,32],[56,50],0,[[],20],[[],52],[[64,42],27],[[],34],[[],16],[[],37],[[],38],[65,34],[[],17],[61,42],[59,42],[62,42],[60,42],[63,42],[[],17],[50,[[5,[17,49]]]],[[20,20],[[42,[39]]]],[[17,17],[[42,[39]]]],[[7,7]],[[7,7]],[[7,7]],[[7,7]],[[7,7]],[[7,7]],[[7,7]],[[7,7]],[[7,7]],[[7,7]],[[7,7]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[52,27,36],42],[[24,36],42],[[26,36],42],[[27,36,[42,[7]]],11],[[37,17],[[42,[34]]]],0,[[56,1],[[5,[8]]]],0,[[33,1],[[5,[2]]]],[17,5],[17,21],[[],56],[56,56],0,[17],[17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[17,22],[20,[[5,[29,43]]]],[20,[[5,[32,44]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[50,[[5,[17]]]],[[],5],[35,[[5,[31,2]]]],[38,[[42,[30]]]],[[35,17],[[5,[[46,[[20,[27]]]],2]]]],[35,[[5,[2]]]],[38,[[5,[2]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[50,[[5,[17,49]]]],[[],[[5,[17,49]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[38,37],[38,37],[17,23],[[],17],[[]],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[1],[1],0,0,0,[[],56],0,0,0,0,0,0,[[],17]],"p":[[3,"World"],[4,"EcsError"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Demand"],[15,"u8"],[3,"Error"],[3,"String"],[3,"TypeId"],[15,"bool"],[15,"usize"],[3,"BitFmt"],[3,"Global"],[3,"Vec"],[3,"DispatcherBuilder"],[3,"Uuid"],[3,"Braced"],[3,"Hyphenated"],[3,"AtomicRefCell"],[3,"Simple"],[15,"u128"],[3,"Urn"],[3,"ComponentStore"],[3,"AtomicComponentStoreRef"],[3,"AtomicComponentStoreRefMut"],[3,"UntypedComponentStore"],[3,"Entities"],[3,"AtomicRef"],[3,"AtomicResource"],[3,"AtomicComponentStore"],[3,"AtomicRefMut"],[3,"Dispatcher"],[3,"UntypedResource"],[3,"ComponentStores"],[3,"Entity"],[3,"UntypedResources"],[3,"Resources"],[4,"Ordering"],[3,"Res"],[3,"ResMut"],[4,"Option"],[3,"BorrowError"],[3,"BorrowMutError"],[15,"never"],[3,"Arc"],[15,"u32"],[15,"u16"],[3,"Error"],[15,"str"],[15,"u64"],[3,"TypedComponentOps"],[3,"Timestamp"],[4,"Variant"],[4,"Version"],[3,"System"],[8,"Iterator"],[3,"Rc"],[3,"ComponentBitsetIteratorMut"],[3,"UntypedComponentBitsetIteratorMut"],[3,"ComponentBitsetIterator"],[3,"UntypedComponentBitsetIterator"],[3,"EntityIterator"],[3,"Layout"],[3,"UntypedResourceInfo"],[8,"RawFns"],[13,"DispatcherExecutionFailed"],[13,"SystemError"],[8,"BitSet"],[8,"SystemParam"],[8,"TypeUuid"],[8,"IntoSystem"],[8,"TypeUuidExt"]]},\
"bones_camera_shake":{"doc":"This crate provides 2D camera shake using the methodology …","t":[12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","CameraShake","CameraShakePlugin","CameraTrauma","add_trauma","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","center","component_ids","decay_rate","default","from","from","from","from_components","from_world","get_components","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","max_angle_rad","max_offset","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_trauma"],"q":["bones_camera_shake","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Component for an entity with camera shake.","Add this plugin to your app to enable camera shake.","Event to add trauma to the camera. Provide a value between …","Adds trauma to the camera, capping it at 1.0","","","","","","","","","","","","","","The camera will always restore to this position.","","The the length of time in seconds for the camera trauma to …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The maximum offset angle in radians that the camera shake …","The maximum offset position that the camera shake can …","Create a new <code>CameraShake</code> component with the provided …","","","","","","","","","","","","","Create a new <code>CameraShake</code> component with the provided …"],"i":[16,0,0,0,1,4,16,1,4,16,1,4,16,1,4,16,1,4,1,1,1,1,4,16,1,1,1,1,4,16,1,4,16,1,4,16,1,4,16,1,1,1,1,4,16,1,4,16,1,4,16,1,4,16,1,1],"f":[0,0,0,0,[[1,2]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[4,5]],0,[[6,7]],0,[[],1],[[]],[[]],[[]],[[]],[8],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[3,9]]]],[[[10,[9]]],[[10,[3,9]]]],[[[10,[9]]],[[10,[3,9]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[11,[[11,[3]]]],[12,[[12,[3]]]],[12,[[12,[3]]]],[12,[[12,[3]]]],0,0,[[2,13,2],1],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[2,2,13,2],1]],"p":[[3,"CameraShake"],[15,"f32"],[8,"Any"],[3,"CameraShakePlugin"],[3,"App"],[3,"Components"],[3,"Storages"],[3,"World"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Vec2"],[4,"Result"],[3,"TypeId"],[3,"CameraTrauma"]]},\
"bones_ecs":{"doc":"Bones ECS","t":[13,13,8,4,13,8,13,13,8,3,0,0,0,12,0,0,14,0,10,10,0,12,0,0,12,12,3,3,3,3,3,3,8,6,10,10,10,10,10,10,10,10,10,11,10,10,10,11,10,10,10,10,10,11,10,10,14,14,11,11,5,11,11,11,11,11,14,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,3,8,3,3,24,24,13,2,4,18,18,18,18,13,2,13,6,8,24,13,2,18,3,3,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,11,10,10,10,11,10,10,10,10,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,8,16,3,3,16,3,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,12,11,11,11,11,12,11,12,10,11,11,11,11,11,11,11,11,11,11,8,24,8,18,3,6,10],"n":["AlreadyBorrowed","DispatcherExecutionFailed","EcsData","EcsError","NotInitialized","RawFns","SystemError","TypeUuidCollision","TypedEcsData","World","atomic","bitset","components","components","dispatcher","entities","join","prelude","raw_clone","raw_drop","resources","resources","system","uuid","0","0","AtomicRef","AtomicRefCell","AtomicRefMut","BorrowError","BorrowMutError","BitFmt","BitSet","BitSetVec","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_fmt","bit_init","bit_len","bit_mask","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_test","bit_xor","bitor","bitset","borrow","borrow_mut","create_bitset","fmt","fmt","fmt","fmt","from","impl_bitset","into","to_string","try_from","try_into","type_id","AtomicComponentStore","AtomicComponentStoreRef","AtomicComponentStoreRefMut","ComponentBitsetIterator","ComponentBitsetIteratorMut","ComponentStore","ComponentStores","TypedComponentOps","UntypedComponentBitsetIterator","UntypedComponentBitsetIteratorMut","UntypedComponentStore","bitset","bitset","bitset","bitset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","drop","for_type","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components_unsafe","from_components_unsafe","get","get","get","get","get","get","get_by_uuid","get_mut","get_mut","get_mut","get_mut","init","insert","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_untyped","iter","iter","iter","iter","iter","iter_mut","iter_mut","iter_mut","iter_mut","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","layout","new","new","next","next","next","next","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","remove","remove","remove","remove","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_get_by_uuid","try_init","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Dispatcher","DispatcherBuilder","add","borrow","borrow","borrow_mut","borrow_mut","build","builder","default","from","from","into","into","iter_stages","new","run_seq","systems","try_from","try_from","try_into","try_into","type_id","type_id","Entities","Entity","EntityIterator","bitset","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_killed","clone","clone","clone_into","clone_into","create","default","eq","fmt","from","from","from","generation","hash","index","into","into","into","into_iter","is_alive","iter_with_bitset","kill","killed","next","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uuid","uuid","AlreadyBorrowed","AtomicRef","AtomicRefCell","AtomicRefMut","BitSet","BorrowError","BorrowMutError","Deref","DerefMut","DispatcherExecutionFailed","EcsData","EcsError","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","NotInitialized","RawFns","SystemError","SystemResult","TypeUuid","TypeUuid","TypeUuidCollision","TypedEcsData","UUID","Uuid","World","as_braced","as_bytes","as_fields","as_hyphenated","as_ptr","as_ref","as_simple","as_u128","as_u64_pair","as_urn","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_fmt","bit_init","bit_len","bit_mask","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_test","bit_xor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","braced","clone","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","components","default","default","default","deref","deref","deref_mut","deserialize","encode_buffer","eq","eq","filter_map","filter_map","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_le","from_bytes_ref","from_fields","from_fields_le","from_slice","from_slice_le","from_str","from_u128","from_u128_le","from_u64_pair","get_mut","get_timestamp","get_variant","get_version","get_version_num","hash","hyphenated","into","into","into","into","into","into","into","into","into_bytes","into_inner","is_nil","join","join","maintain","map","map","new","new","new_v4","nil","parse_str","partial_cmp","partial_cmp","provide","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","resources","run_system","serialize","simple","to_bytes_le","to_fields_le","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_u128_le","try_borrow","try_borrow_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_ascii","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","urn","0","0","AtomicResource","Resources","UntypedResource","UntypedResourceInfo","UntypedResources","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cell","clone","clone","clone","clone_fn","clone_into","clone_into","clone_into","contains","default","default","drop","drop_fn","from","from","from","from","from","get","get","init","insert","insert","into","into","into","into","into","into_untyped","layout","new","new","new","new_raw","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","remove","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_get","try_insert","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","untyped","untyped_mut","Comp","CompMut","IntoSystem","Param","Res","ResMut","State","System","SystemParam","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref_mut","from","from","from","get_state","get_state","get_state","get_state","get_state","initialize","initialize","initialize","initialize","initialize","initialize","initialize","into","into","into","name","name","run","run","system","system","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","TypeUuid","TypeUuid","TypeUuidExt","UUID","Uuid","UuidMap","uuid"],"q":["bones_ecs","","","","","","","","","","","","","","","","","","","","","","","","bones_ecs::EcsError","","bones_ecs::atomic","","","","","bones_ecs::bitset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bones_ecs::componentsbones_ecs::dispatcher","","","","","","","","","","","","","","","","","","","","","","","","bones_ecs::entities","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bones_ecs::preludebones_ecs::prelude::EcsError","","bones_ecs::resources","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bones_ecs::system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bones_ecs::uuid","","","","","",""],"d":["The requested resource is already borrowed.","The execution of the dispatcher failed and returned one or …","Helper trait that is auto-implemented for anything that …","The types of errors used throughout the ECS.","A resource was not initialized in the <code>World</code> but the <code>System</code> …","Helper trait that is auto-implemented for all <code>Clone</code>-able …","This variant is for user-defined errors.","This happens when two Rust types have the same <code>TypeUuid</code>, …","Helper trait that is auto-implemented for anything that …","The <code>World</code> is simply a collection of <code>Resources</code>, and …","Atomic Refcell implmentation.","Bitset implementation.","ECS component storage.","Stores the world components.","<code>System</code> executor for <code>World</code>s.","<code>Entity</code> implementation, storage, and interation.","The join macro makes it very easy to iterate over multiple …","The prelude.","Clone the value at <code>src</code>, writing the new value to <code>dst</code>.","Drop the value at <code>ptr</code>.","World resource storage.","Stores the world resources.","Implements the system API for the ECS.","UUID-related utilities such as UUID map and type UUIDs.","","","A wrapper type for an immutably borrowed value from an …","A threadsafe analogue to RefCell.","A wrapper type for a mutably borrowed value from an …","An error returned by <code>AtomicRefCell::try_borrow</code>.","An error returned by <code>AtomicRefCell::try_borrow_mut</code>.","BitSet formatter.","The BitSet API.","The type of bitsets used to track entities in component …","Returns if all bits are set.","Bitwise AND.","Bitwise AND after NOT of rhs.","Returns if any bits are set.","Conditionally sets or resets the given bit.","Counts the number of set bits.","Returns if the two bitsets have no bits in common.","Returns if the two bitsets are equal.","Flips the given bit.","Format the bits.","Initializes all bits.","Returns total number of bits.","Bitwise combine with MASK.","Returns if none of the bits are set.","Bitwise NOT.","Bitwise OR.","Resets the given bit.","Sets the given bit.","Returns if self is a subset of rhs.","Returns if self is a superset of rhs.","Returns if the given bit is set.","Bitwise XOR.","Shorthand for combining bitsets with bit_or.","Shorthand for setting bits on the bitset container.","","","Creates a bitset big enough to contain the index of each …","","","","","Returns the argument unchanged.","Implements the <code>BitSet</code> trait members for your type through …","Calls <code>U::from(self)</code>.","","","","","A typed, wrapper handle around <code>UntypedComponentStore</code> that …","A read-only borrow of <code>AtomicComponentStore</code>.","A mutable borrow of <code>AtomicComponentStore</code>.","Read-only iterator over components matching a given bitset","Mutable iterator over components matching a given bitset","A typed wrapper around <code>UntypedComponentStore</code>.","A collection of <code>ComponentStore&lt;T&gt;</code>.","Implements typed operations on top of a …","Iterates over components using a provided bitset. Each …","Iterates over components using a provided bitset. Each …","Holds components of a given type indexed by <code>Entity</code>.","Read the bitset containing the list of entites with this …","Read the bitset containing the list of entites with this …","Get the bitset representing which entities have this …","Returns the bitset indicating which entity indices have a …","","","","","","","","","","","Borrow the component store.","","","","","","","","","","","Mutably borrow the component store.","","","","","","","","","","","","","Create an <code>UntypedComponentStore</code> that is valid for the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Safety","Borrow a component in the store, if it exists for the …","Gets an immutable reference to the component of <code>Entity</code>.","Gets an immutable reference to the component of <code>Entity</code>.","Gets an immutable reference to the component of <code>Entity</code>.","Get a read-only pointer to the component for the given …","Get the components of a certain type","Get the untyped component storage by the component’s UUID","Mutably borrow a component in the store, if it exists for …","Gets a mutable reference to the component of <code>Entity</code>.","Gets a mutable reference to the component of <code>Entity</code>.","Get a mutable pointer to the component for the given <code>Entity</code>","Initialize component storage for type <code>T</code>.","Insert a component into the store.","Inserts a component for the given <code>Entity</code> index. Returns …","Inserts a component for the given <code>Entity</code> index.","Returns true if the entity already had a component of this …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Converts to the internal, untyped <code>ComponentStore</code>.","Iterate over all components in the store.","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type.","Iterates immutably over all components of this type.","Mutably iterate over all components in the store.","Iterates mutably over all components of this type. Very …","Iterates mutably over all components of this type.","Iterates mutably over all components of this type.","Mutably iterate over all the components in the store that …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterate over all the components in the store that match …","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","Get the layout of the components stored.","Safety","Create a arbitrary <code>UntypedComponentStore</code>.","","","","","","","","","","","Remove a component from an entity, returning the previous …","Removes the component of <code>Entity</code>. Returns <code>Some(T)</code> if the …","Removes the component of <code>Entity</code>.","If there is a previous value, <code>true</code> will be returned.","","","","","","","","","","","","","","","Get the components of a certain type","Get the untyped component storage by the component’s UUID","Initialize component storage for type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","A dispatcher is used to execute a collection of <code>System</code> in …","A builder that accumulates systems to be inserted into a …","Adds a function implementing <code>IntoSystem</code> to the system pool.","","","","","Builds a <code>Dispatcher</code> from the accumulated set of <code>System</code>. …","Create a builder for <code>Dispatcher</code>.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator of all stages.","Creates a new <code>DispatcherBuilder</code>.","Runs the systems one after the other, one at a time.","The current systems in this builder","","","","","","","Holds a list of alive entities.","An entity index.","Iterator over entities using the provided bitset.","Returns a bitset where each index where the bit is set to …","","","","","","","Clears the killed entity list.","","","","","Creates a new <code>Entity</code> and returns it.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the generation of this <code>Entity</code>.","","Returns the index of this <code>Entity</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if the <code>Entity</code> is still alive.","Iterates over entities using the provided bitset.","Kill an entity.","Returns entities in the killed list.","","","","","","","","","","","","","","","","","","","The requested resource is already borrowed.","A wrapper type for an immutably borrowed value from an …","A threadsafe analogue to RefCell.","A wrapper type for a mutably borrowed value from an …","The BitSet API.","An error returned by <code>AtomicRefCell::try_borrow</code>.","An error returned by <code>AtomicRefCell::try_borrow_mut</code>.","Implements <code>Deref</code> for <em>single-item</em> structs. This is …","Implements <code>DerefMut</code> for <em>single-item</em> structs. This is …","The execution of the dispatcher failed and returned one or …","","The types of errors used throughout the ECS.","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","A resource was not initialized in the <code>World</code> but the <code>System</code> …","","This variant is for user-defined errors.","The result of a <code>System</code>’s execution.","Provides a statically defined UUID for a Rust type.","","This happens when two Rust types have the same <code>TypeUuid</code>, …","","","A Universally Unique Identifier (UUID).","The <code>World</code> is simply a collection of <code>Resources</code>, and …","Get a borrowed <code>Braced</code> formatter.","Returns a slice of 16 octets containing the value.","Returns the four field values of the UUID.","Get a borrowed <code>Hyphenated</code> formatter.","Returns a raw pointer to the underlying data in this cell.","","Get a borrowed <code>Simple</code> formatter.","Returns a 128bit value containing the value.","Returns two 64bit values containing the value.","Get a borrowed <code>Urn</code> formatter.","Returns if all bits are set.","Bitwise AND.","Bitwise AND after NOT of rhs.","Returns if any bits are set.","Conditionally sets or resets the given bit.","Counts the number of set bits.","Returns if the two bitsets have no bits in common.","Returns if the two bitsets are equal.","Flips the given bit.","Format the bits.","Initializes all bits.","Returns total number of bits.","Bitwise combine with MASK.","Returns if none of the bits are set.","Bitwise NOT.","Bitwise OR.","Resets the given bit.","Sets the given bit.","Returns if self is a subset of rhs.","Returns if self is a superset of rhs.","Returns if the given bit is set.","Bitwise XOR.","Immutably borrows the wrapped value.","","","","","","","","","Mutably borrows the wrapped value.","","","","","","","","","Get a <code>Braced</code> formatter.","","Copies an <code>AtomicRef</code>.","","","","","","","","Stores the world components.","","","","","","","","A buffer that can be used for <code>encode_...</code> calls, that is …","","","Make a new <code>AtomicRef</code> for an optional component of the …","Make a new <code>AtomicRefMut</code> for an optional component of the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","Creates a reference to a UUID from a reference to the …","Creates a UUID from four field values.","Creates a UUID from four field values in little-endian …","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","","Creates a UUID from a 128bit value.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID from two 64bit values.","Returns a mutable reference to the wrapped value.","If the UUID is the correct version (v1, v6, or v7) this …","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","","Get a <code>Hyphenated</code> formatter.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes self and returns the underlying byte value of the …","Consumes the <code>AtomicRefCell</code>, returning the wrapped value.","Tests if the UUID is nil (all zeros).","","The join macro makes it very easy to iterate over multiple …","Remove the component info for dead entities.","Make a new <code>AtomicRef</code> for a component of the borrowed data.","Make a new <code>AtomicRefMut</code> for a component of the borrowed …","Creates a new <code>AtomicRefCell</code> containing <code>value</code>.","Create a new <code>World</code>.","Creates a random UUID.","The ‘nil UUID’ (all zeros).","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","","","","Stores the world resources.","Run a system once.","","Get a <code>Simple</code> formatter.","Returns the bytes of the UUID in little-endian order.","Returns the four field values of the UUID in little-endian …","","","","","","","","Returns a 128bit little-endian value containing the value.","Attempts to immutably borrow the wrapped value, but …","Attempts to mutably borrow the wrapped value, but instead …","","","","","","","","","","","","","","","","","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","","","Get a <code>Urn</code> formatter.","","","A handle to a resource from a <code>Resources</code> collection.","A collection of resources.","An untyped resource that may be inserted into …","Used to construct an <code>UntypedResource</code>.","Storage for un-typed resources.","","","Lock the resource for reading.","","","","","","Lock the resource for read-writing.","","","","Cell containing the raw pointer to the resource’s data","","","","A function that may be called to clone the resource from …","","","","Check whether or not a resource is in the store.","","","","An optional function that will be called to drop the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a cell containing the resource data pointer for the …","Get a resource handle from the store.","Initialize a resource of type <code>T</code> by inserting it’s …","Insert a new resource","Insert a resource.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume <code>Resources</code> and extract the underlying …","The memory layout of the resource","Creates a new <code>UntypedResource</code> from an instance of a Rust …","Create an empty <code>UntypedResources</code>.","Create an empty <code>Resources</code>.","Create a new <code>UntypedResource</code> from raw <code>UntypedResourceInfo</code>.","","","","","","","Remove a resource","","","","","","","","","Gets a resource handle from the store if it exists.","Try to insert a resource.","","","","","","","","","","","Borrow the underlying <code>UntypedResources</code> store.","Mutably borrow the underlying <code>UntypedResources</code> store.","<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.","<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.","Converts a function into a <code>System</code>.","The type of the parameter, ranging over the lifetime of …","<code>SystemParam</code> for getting read access to a resource.","<code>SystemParam</code> for getting mutable access to a resource.","The intermediate state for the parameter, that may be …","Struct used to run a system function using the world.","Trait used to implement parameters for <code>System</code> functions.","This is used create an instance of the system parame, …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","This is called to produce the intermediate state of the …","","","","","This will be called to give the parameter a chance to …","Initializes the resources required to run this system …","","","","","This will be called once by <code>Dispatcher</code> to initialize the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying type name of the system.","A best-effort name for the system, for diagnostic purposes.","Runs the system’s function using the provided <code>World</code>","This is run every time the system is executed","Convert into a <code>System</code>.","","","","","","","","","","","Provides a statically defined UUID for a Rust type.","","Extension trait for <code>TypeUuid</code> that adds a method returning …","","A Universally Unique Identifier (UUID).","Faster hash map using <code>FxHashMap</code> and a UUID key.","Get the <code>Uuid</code> assocated to the type."],"i":[36,36,0,0,36,0,36,36,0,0,0,0,0,39,0,0,0,0,75,75,0,39,0,0,76,77,0,0,0,0,0,0,0,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,4,4,0,4,4,4,4,4,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,12,13,14,15,33,31,34,32,22,12,13,14,15,16,16,18,33,31,34,32,22,12,13,14,15,16,16,18,15,16,18,15,16,18,12,16,18,15,15,33,31,34,32,22,12,13,14,15,16,18,12,12,16,22,12,13,14,15,18,18,22,12,14,15,18,22,12,14,15,33,31,34,32,22,12,13,14,15,16,18,33,31,34,32,12,22,12,13,14,15,22,12,14,15,22,12,14,15,22,12,13,14,15,15,22,15,33,31,34,32,15,16,18,15,16,18,22,12,14,15,15,16,18,33,31,34,32,22,12,13,14,15,16,18,18,18,18,33,31,34,32,22,12,13,14,15,16,18,33,31,34,32,22,12,13,14,15,16,18,0,0,37,40,37,40,37,37,40,37,40,37,40,37,40,37,40,37,40,37,40,37,40,37,0,0,0,41,44,23,41,44,23,41,41,23,41,23,41,41,41,23,23,44,23,41,23,23,23,44,23,41,44,41,41,41,41,44,23,41,23,41,23,41,44,23,41,44,23,41,44,23,41,41,41,36,0,0,0,0,0,0,0,0,36,0,0,28,28,28,28,36,0,36,0,0,0,36,0,25,0,0,28,28,28,28,20,28,28,28,28,28,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,20,20,54,55,51,52,28,36,39,20,20,54,55,51,52,28,36,39,28,20,51,28,39,20,28,39,20,28,39,20,28,39,51,52,52,28,28,20,28,51,52,20,54,54,55,55,51,52,28,28,28,28,36,36,20,20,20,54,55,51,52,28,28,28,28,28,36,39,28,28,28,28,28,28,28,28,28,28,28,20,28,28,28,28,28,28,20,54,55,51,52,28,36,39,28,20,28,0,0,39,51,52,20,39,28,28,28,20,28,36,20,28,39,20,28,39,39,39,28,28,28,28,20,28,39,54,55,28,36,28,20,20,20,54,55,51,52,28,28,36,39,20,54,55,51,52,28,36,39,28,28,20,54,55,51,52,28,36,39,28,76,77,0,0,0,0,0,70,67,66,66,68,69,70,67,66,66,68,69,70,67,68,69,70,67,68,69,69,68,69,67,70,70,67,66,68,69,68,69,69,68,69,70,67,66,68,69,69,70,67,68,69,67,67,68,69,67,68,69,68,67,68,69,70,67,66,68,69,69,69,70,67,66,68,69,70,67,66,68,69,69,69,0,0,0,79,0,0,79,0,0,79,73,71,71,72,72,80,81,73,71,72,71,72,72,73,71,72,79,71,72,80,81,79,73,71,72,80,81,73,73,71,72,73,73,73,73,38,73,73,71,72,73,71,72,73,71,72,0,0,0,25,0,0,82],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[]],[[]],[[],2],[[3,2]],[[],3],[[],2],[[],2],[3],[[],4],[2],[[],3],[[]],[[],2],[[]],[[]],[3],[3],[[],2],[[],2],[3,2],[[]],0,0,[[]],[[]],[[],5],[[4,6],[[8,[7]]]],[[4,6],[[8,[7]]]],[[4,6],[[8,[7]]]],[[4,6],[[8,[7]]]],[[]],0,[[]],[[],9],[[],8],[[],8],[[],10],0,0,0,0,0,0,0,0,0,0,0,[[[12,[11]]],5],[[[13,[11]]],5],[[[14,[11]]],5],[15,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[11]]],[[13,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[11]]],[[14,[11]]]],[[]],[[]],[15,15],[[[16,[[0,[17,17]]]]],[[16,[[0,[17,17]]]]]],[18,18],[[]],[[]],[[]],[[],[[12,[11]]]],[[],[[16,[17]]]],[[],18],[15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[12,[[0,[11,19]]]]]],[15,[[12,[11]]]],[[[21,[[20,[15]]]]],[[16,[11]]]],[[[22,[17]],15,23],24],[[[12,[11]],23],24],[[[13,[11]],23],24],[[[14,[11]],23],24],[[15,23],[[24,[1]]]],[18,[[16,[[0,[17,25,26,27]]]]]],[[18,28],[[21,[[20,[15]]]]]],[[[22,[17]],15,23],24],[[[12,[11]],23],24],[[[14,[11]],23],24],[[15,23],[[24,[1]]]],[18],[[[22,[17]],15,23,17],[[24,[17]]]],[[[12,[11]],23,11],[[24,[11]]]],[[[14,[11]],23,11],[[24,[11]]]],[[15,23,1],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[11]]],15],[[[22,[17]],15],29],[[[12,[11]]],29],[[[13,[11]]],29],[[[14,[11]]],29],[15,29],[[[22,[17]],15],29],[[[12,[11]]],29],[[[14,[11]]],29],[15,29],[[[22,[17]],15,[30,[5]]],[[31,[17]]]],[[[12,[11]],[30,[5]]],[[31,[11]]]],[[[14,[11]],[30,[5]]],[[31,[11]]]],[[15,[30,[5]]],32],[[[22,[17]],15,[30,[5]]],[[33,[17]]]],[[[12,[11]],[30,[5]]],[[33,[11]]]],[[[13,[11]],[30,[5]]],[[33,[11]]]],[[[14,[11]],[30,[5]]],[[33,[11]]]],[[15,[30,[5]]],34],[15,35],[[],[[22,[17]]]],[[35,24],15],[33,24],[31,24],[34,24],[32,24],[[1,1]],[[1,1]],[[1,1]],[1],[1],[1],[[[22,[17]],15,23],[[24,[17]]]],[[[12,[11]],23],[[24,[11]]]],[[[14,[11]],23],[[24,[11]]]],[[15,23,[24,[1]]],2],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[18,[[8,[[16,[[0,[17,25,26,27]]]],36]]]],[[18,28],[[8,[[21,[[20,[15]]]],36]]]],[18,[[8,[36]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[37,38],37],[[]],[[]],[[]],[[]],[[37,39],40],[[],37],[[],37],[[]],[[]],[[]],[[]],[40,29],[[],37],[[40,39],[[8,[36]]]],0,[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],0,0,0,[41,5],[[]],[[]],[[]],[[]],[[]],[[]],[41],[23,23],[41,41],[[]],[[]],[41,23],[[],41],[[23,23],2],[[23,6],42],[[]],[[]],[[]],[23,43],[23],[23,43],[[]],[[]],[[]],[[]],[[41,23],2],[[41,[30,[5]]],44],[[41,23]],[41,45],[44,24],[[1,1]],[[1,1]],[1],[1],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],[[],10],[[]],[[],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28,46],[28],[28],[28,47],[20],[28],[28,48],[28,49],[28],[28,50],[[],2],[[]],[[]],[[],2],[[3,2]],[[],3],[[],2],[[],2],[3],[[],4],[2],[[],3],[[]],[[],2],[[]],[[]],[3],[3],[[],2],[[],2],[3,2],[[]],[20,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,46],[20,20],[51,51],[28,28],[39,39],[[]],[[]],[[]],[[20,20],53],[[28,28],53],0,[[],20],[[],28],[[],39],[51],[52],[52],[[],[[8,[28]]]],[[]],[[20,20],2],[[28,28],2],[51,[[24,[51]]]],[52,[[24,[52]]]],[[20,6],[[8,[7]]]],[[54,6],[[8,[7]]]],[[54,6],[[8,[7]]]],[[55,6],[[8,[7]]]],[[55,6],[[8,[7]]]],[[51,6],[[8,[7]]]],[[52,6],[[8,[7]]]],[[28,6],[[8,[7]]]],[[28,6],[[8,[7]]]],[[28,6],[[8,[7]]]],[[28,6],[[8,[7]]]],[[36,6],42],[[36,6],42],[[],20],[56],[[]],[[]],[[]],[[]],[[]],[48,28],[[]],[50,28],[46,28],[47,28],[[]],[[]],[[],28],[[],28],[[],28],[[43,57,57],28],[[43,57,57],28],[[],[[8,[28,58]]]],[[],[[8,[28,58]]]],[59,[[8,[28]]]],[49,28],[49,28],[[60,60],28],[20],[28,[[24,[61]]]],[28,62],[28,[[24,[63]]]],[28,3],[28],[28,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28],[20],[28,2],0,0,[39],[51,51],[52,52],[[],20],[[],39],[[],28],[[],28],[59,[[8,[28,58]]]],[[20,20],[[24,[53]]]],[[28,28],[[24,[53]]]],[64],[[1,1]],[[1,1]],[[1,1]],[1],[1],[1],0,[[39,38],65],[28,8],[28,48],[28],[28],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[28,49],[20,[[8,[51,54]]]],[20,[[8,[52,55]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[59,[[8,[28]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[59,[[8,[28,58]]]],[[],[[8,[28,58]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[28,50],0,0,0,0,0,0,0,[[]],[[]],[[[66,[11]]],[[51,[11]]]],[[]],[[]],[[]],[[]],[[]],[[[66,[11]]],[[52,[11]]]],[[]],[[]],[[]],0,[67,67],[68,68],[69,69],0,[[]],[[]],[[]],[69,2],[[],68],[[],69],[67],0,[[]],[[]],[[]],[[]],[[]],[[68,28],[[24,[[21,[[20,[1]]]]]]]],[69,[[66,[11]]]],[69],[[68,28,67],[[24,[67]]]],[[69,11]],[[]],[[]],[[]],[[]],[[]],[69,68],0,[[[0,[17,27,26]]],67],[[],68],[[],69],[70,67],[[1,1]],[[1,1]],[[1,1]],[1],[1],[1],[[68,28],[[24,[67]]]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[69,[[24,[[66,[11]]]]]],[[69,11],[[8,[36]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],[[],10],[[],10],[[],10],[69,68],[69,68],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[71,[11]]]],[72],[72],[[]],[[]],[[]],[39],[39],[39],[39],[39],[39],[[73,39]],[39],[39],[39],[39],0,[[]],[[]],[[]],[73,59],0,[[73,39],74],0,[[],73],[73,73],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],[[],10],0,0,0,0,0,0,[[],28]],"p":[[15,"u8"],[15,"bool"],[15,"usize"],[3,"BitFmt"],[6,"BitSetVec"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"String"],[3,"TypeId"],[8,"TypedEcsData"],[3,"ComponentStore"],[3,"AtomicComponentStoreRef"],[3,"AtomicComponentStoreRefMut"],[3,"UntypedComponentStore"],[3,"AtomicComponentStore"],[8,"Clone"],[3,"ComponentStores"],[8,"Pod"],[3,"AtomicRefCell"],[3,"Arc"],[3,"TypedComponentOps"],[3,"Entity"],[4,"Option"],[8,"TypeUuid"],[8,"Send"],[8,"Sync"],[3,"Uuid"],[8,"Iterator"],[3,"Rc"],[3,"ComponentBitsetIteratorMut"],[3,"UntypedComponentBitsetIteratorMut"],[3,"ComponentBitsetIterator"],[3,"UntypedComponentBitsetIterator"],[3,"Layout"],[4,"EcsError"],[3,"DispatcherBuilder"],[8,"IntoSystem"],[3,"World"],[3,"Dispatcher"],[3,"Entities"],[6,"Result"],[15,"u32"],[3,"EntityIterator"],[3,"Vec"],[3,"Braced"],[3,"Hyphenated"],[3,"Simple"],[15,"u128"],[3,"Urn"],[3,"AtomicRef"],[3,"AtomicRefMut"],[4,"Ordering"],[3,"BorrowError"],[3,"BorrowMutError"],[15,"never"],[15,"u16"],[3,"Error"],[15,"str"],[15,"u64"],[3,"Timestamp"],[4,"Variant"],[4,"Version"],[3,"Demand"],[6,"SystemResult"],[3,"AtomicResource"],[3,"UntypedResource"],[3,"UntypedResources"],[3,"Resources"],[3,"UntypedResourceInfo"],[3,"Res"],[3,"ResMut"],[3,"System"],[6,"Result"],[8,"RawFns"],[13,"DispatcherExecutionFailed"],[13,"SystemError"],[8,"BitSet"],[8,"SystemParam"],[6,"Comp"],[6,"CompMut"],[8,"TypeUuidExt"]]},\
"bones_has_load_progress":{"doc":"Helper plugin and derive macro for tracking the load …","t":[8,24,3,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11],"n":["HasLoadProgress","HasLoadProgress","LoadProgress","LoadingResources","as_any","as_any","as_any_mut","as_any_mut","as_percent","asset_server","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","default","fmt","fmt","from","from","from_world","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","load_progress","loaded","merged","to_owned","to_string","total","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["bones_has_load_progress","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Trait implemented on items that can report their load …","Derive macro for <code>HasLoadProgress</code>","A progress indicator holding how many items must be loaded …","System param containing Bevy resources that may be used to …","","","","","Get the load progress as a percentage","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Get a total load progress from an iterator of <code>LoadProgress</code>s","","","","","","","","",""],"i":[0,0,0,0,2,12,2,12,2,12,2,12,2,12,2,2,2,2,2,2,2,12,2,2,12,2,12,2,12,2,12,16,2,2,2,2,2,2,12,2,12,2,12],"f":[0,0,0,0,[[],1],[[],1],[[],1],[[],1],[2,3],0,[[]],[[]],[[]],[[]],[2,2],[[]],[[],[[6,[4,5]]]],[[],2],[[2,7],8],[[2,7],8],[[]],[[]],[9],[[]],[[]],[[[6,[5]]],[[6,[1,5]]]],[[[6,[5]]],[[6,[1,5]]]],[10,[[10,[1]]]],[10,[[10,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[12,2],0,[[],2],[[]],[[],13],0,[[],14],[[],14],[[],14],[[],14],[[],15],[[],15]],"p":[[8,"Any"],[3,"LoadProgress"],[15,"f32"],[8,"TypeData"],[3,"Global"],[3,"Box"],[3,"Formatter"],[6,"Result"],[3,"World"],[3,"Arc"],[3,"Rc"],[3,"LoadingResources"],[3,"String"],[4,"Result"],[3,"TypeId"],[8,"HasLoadProgress"]]},\
"bones_has_load_progress_macros":{"doc":"","t":[24],"n":["HasLoadProgress"],"q":["bones_has_load_progress_macros"],"d":["Derive macro for <code>HasLoadProgress</code>"],"i":[0],"f":[0],"p":[]},\
"bones_matchmaker":{"doc":"Matchmaking server for Jumpy.","t":[0,5],"n":["cli","start"],"q":["bones_matchmaker","bones_matchmaker::cli"],"d":["",""],"i":[0,0],"f":[0,[[]]],"p":[]},\
"bones_matchmaker_proto":{"doc":"Network protocol structs for the Jumpy matchmaker.","t":[13,13,13,3,4,4,13,3,13,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Accepted","All","ClientCount","MatchInfo","MatchmakerRequest","MatchmakerResponse","One","RecvProxyMessage","RequestMatch","SendProxyMessage","Success","TargetClient","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_count","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_client","hash","into","into","into","into","into","into","match_data","message","message","serialize","serialize","serialize","serialize","serialize","serialize","target_client","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","client_count","player_idx","random_seed","0"],"q":["bones_matchmaker_proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bones_matchmaker_proto::MatchmakerRequest","bones_matchmaker_proto::MatchmakerResponse","","","","bones_matchmaker_proto::TargetClient"],"d":["The conneciton has been accepted","Send the message to all connected clients.","This is the current number of connected clients","Information about a match that is being requested","Requests that may be made in matchmaking mode","Responses that may be returned in matchmaking mode","Send the message to the client with the specified index.","The format of a message forwarded by the proxy to a client.","Request a match ID from the server","The format of a message sent by a client to the proxy, so …","The desired client count has been reached, and you may …","The client to send a network message to.","","","","","","","","","","","","","The number of clients to have in a match","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The client that the message came from.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","This is an arbitrary set of bytes that must match exactly …","The message data.","The message data.","","","","","","","The client that the message should go to.","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of connected clients in the match","The client idx of the current client","The random seed that each client should use.",""],"i":[3,5,3,0,0,0,5,0,1,0,3,0,1,2,3,4,5,6,1,2,3,4,5,6,2,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,2,1,2,3,4,5,6,1,2,3,4,5,6,6,2,1,2,3,4,5,6,2,4,6,1,2,3,4,5,6,4,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,12,13,14,14,14,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[1]]]],[[],[[7,[2]]]],[[],[[7,[3]]]],[[],[[7,[4]]]],[[],[[7,[5]]]],[[],[[7,[6]]]],[[2,2],8],[[1,9],10],[[2,9],10],[[3,9],10],[[4,9],10],[[5,9],10],[[6,9],10],[[]],[[]],[[]],[[]],[[]],[[]],0,[2],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1,7],[2,7],[3,7],[4,7],[5,7],[6,7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0],"p":[[4,"MatchmakerRequest"],[3,"MatchInfo"],[4,"MatchmakerResponse"],[3,"SendProxyMessage"],[4,"TargetClient"],[3,"RecvProxyMessage"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[13,"RequestMatch"],[13,"ClientCount"],[13,"Success"],[13,"One"]]},\
"quinn_runtime_bevy":{"doc":"Quinn Runtime Bevy","t":[12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","0","AsyncExecutor","AsyncIoTimer","BevyIoTaskPoolExecutor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","fmt","fmt","fmt","from","from","from","into","into","into","new_timer","new_timer","poll","reset","spawn","spawn","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wrap_udp_socket","wrap_udp_socket"],"q":["quinn_runtime_bevy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,5,0,0,0,1,2,5,1,2,5,1,2,1,2,2,1,2,5,1,2,5,1,2,5,1,2,5,5,1,2,1,2,1,2,5,1,2,5,1,2,5,1,2,5,1,2],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[2],[[1,3],4],[[2,3],4],[[5,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[1,6],[[9,[[8,[7]]]]]],[[2,6],[[9,[[8,[7]]]]]],[[[9,[5]],10],11],[[[9,[5]],6]],[[1,[9,[[8,[12]]]]]],[[2,[9,[[8,[12]]]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[1,15],[[17,[[8,[16]]]]]],[[2,15],[[17,[[8,[16]]]]]]],"p":[[3,"BevyIoTaskPoolExecutor"],[3,"AsyncExecutor"],[3,"Formatter"],[6,"Result"],[3,"AsyncIoTimer"],[3,"Instant"],[8,"AsyncTimer"],[3,"Box"],[3,"Pin"],[3,"Context"],[4,"Poll"],[8,"Future"],[4,"Result"],[3,"TypeId"],[3,"UdpSocket"],[8,"AsyncUdpSocket"],[6,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
